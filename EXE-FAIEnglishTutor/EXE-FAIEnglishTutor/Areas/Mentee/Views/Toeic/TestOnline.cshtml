
@{
    Layout = "_Layout";
}

        <!-- Page Content  -->
        <div id="content" class="p-4 p-md-5">
    <div class="sticky-wrapper-h110">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="container-fluid">

                    <button type="button" id="sidebarCollapse" class="btn btn-sidebar-custom ">
                        <i class="fa fa-bars"></i>
                        <span class="sr-only">Toggle Menu</span>
                    </button>
                    <button class="btn btn-dark d-inline-block d-lg-none ml-auto" type="button" 
                            data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <i class="fa fa-bars"></i>
                    </button>

                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="nav navbar-nav ml-auto">
                            @*  <li class="nav-item active">
                            <a class="nav-link" href="home.html">Home</a>
                            </li>
                            <li class="nav-item">
                            <a class="nav-link" href="#">About</a>
                            </li>
                            <li class="nav-item">
                            <a class="nav-link" href="#">Portfolio</a>
                            </li> *@
                            <li>
                                <a style="margin-right: 20px;" asp-area="Mentee" class="btn-test-online" asp-controller="Toeic" asp-action="TestOnline">Test Online</a>
                            </li>
                            @if (User.Identity.IsAuthenticated)
                            {
                                // Đọc thông tin từ cookie
                                var fullName = User.Identity.Name;
                                var avatarUrl = User.FindFirst("Avatar")?.Value;
                                <li class="nav-item dropdown">

                                    <a class="nav-link dropdown-toggle nav-link-avatar" href="#" id="avatarDropdown" role="button"
                                       data-bs-toggle="dropdown" aria-expanded="false">
                                        <div class="nav-img">
                                            <img src="@avatarUrl" alt="Avatar" class="img-fluid" style="border-radius: 50%;">
                                        </div>
                                    </a>
                                    <div class=" menu-items dropdown-menu dropdown-menu-end" aria-labelledby="avatarDropdown">
                                        <div class="menu-title">
                                            <h6 class="dropdown-header">Hello, <span>@fullName</span></h6>
                                        </div>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item" asp-controller="Profile" asp-action="index">
                                            <i class="bi bi-person-circle"></i> View Profile
                                        </a>
                                        <div class="dropdown-divider"></div>
                                        <a id="logout-link" class="dropdown-item text-danger" href="#">
                                            <i class="bi bi-box-arrow-right"></i> <span id="logoutOption">Logout</span>
                                        </a>

                                    <form id="logoutForm" asp-area="" asp-controller="Account" asp-action="Logout" method="post" style="display: none;"></form>

                                    </div>
                                </li>
                            }
                            else
                            {
                                <a class="btn-login-custom btn " asp-area="" asp-controller="Account" asp-action="Login">Đăng nhập</a>
                            }
                        </ul>
                    </div>
                </div>
            </nav>
    </div>

            <!-- Khối lệnh test Online Toeic -->
            <div class="content-container mg-top-20">
                <div class="container text-center">
                    <h5>FAI Tutor LÀ Website TẠI VIỆT NAM CÓ TEST TOEIC 4 KỸ NĂNG GIỐNG 90% ĐỀ THI THẬT</h5>

                    <!-- Tabs -->
            <div class="tabs">
                <button class="tab-button active-tab" onclick="fetchAndShowTab('listening-reading', 3, this)">
                    Listening & Reading
                </button>
                <button class="tab-button inactive-tab" onclick="fetchAndShowTab('speaking-writing', 2, this)">
                    Speaking & Writing
                </button>
            </div>

            <!-- Listening - Reading -->
            <div class="timeline tab-content" id="listening-reading"></div>

            <!-- Speaking - Writing -->
            <div class="timeline tab-content" id="speaking-writing" style="display: none;"></div>

                
            
                </div>
            </div>

        </div>



    <!-- Lớp Overlay -->
    <div class="overlay" id="overlay"></div>


@section Scripts {
<style>
    .btn-test-online {
        display: inline-block;
        background-color: #4CAF50;
        /* Màu xanh lá */
        color: white;
        font-size: 14px;
        font-weight: bold;
        padding: 8px 15px;
        border: none;
        border-radius: 5px;
        /* Bo góc */
        text-decoration: none;
        text-transform: uppercase;
        transition: 0.3s ease-in-out;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.2);
    }

        .btn-test-online:hover {
            background-color: #45a049;
            /* Màu xanh nhạt hơn khi hover */
            color: white;
            transform: scale(1.05);
        }

    .navbar {
        position: unset;
        border-radius: 10px;
        top: 1 !important;
        /* Căn với sidebar mặc định */
        width: 100% !important;
        margin-top: -30px;
    }

    body {
        font-family: Arial, sans-serif;
    }

    .tabs {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .tab-button {
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border: none;
        cursor: pointer;
        transition: 0.3s;
        border-radius: 8px;
    }

    .active-tab {
        background-color: #ff6600;
        /* Màu cam */
        color: white;
    }

    .inactive-tab {
        background-color: #0033cc;
        /* Màu xanh */
        color: white;
    }

    .timeline {
        position: relative;
        margin: 20px auto;
        max-width: 600px;
        padding-left: 40px;
    }

    /* Mục timeline */
    .timeline-item {
        position: relative;
        padding: 15px 20px;
        background: white;
        border-radius: 5px;
        margin: 20px 0;
        border: 1px solid #ddd;
        font-weight: bold;
        transition: 0.3s;
    }

        .timeline-item:hover {
            background: #f1f1f1;
        }

        /* Số thứ tự trên timeline */
        .timeline-item::before {
            content: attr(data-number);
            position: absolute;
            left: -35px;
            top: 50%;
            transform: translateY(-50%);
            background: #FFA53A;
            color: white;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-weight: bold;
        }

    .timeline-header {
        display: flex;
        align-items: center;
        cursor: pointer;
        font-weight: bold;
        color: #f59a5e;
        font-size: 18px;
    }

        .timeline-header .arrow {
            margin-left: auto;
            transition: transform 0.3s ease;
        }

    .timeline-content {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        white-space: nowrap;
    }

    .test-item:hover {
        background: #f0f0f0;
    }

    #testList {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        flex-wrap: nowrap;
        overflow-x: auto;
        width: 100%;
        max-width: 900px;
        margin: 0 auto;
    }

    .test-item {
        flex: 1;
        text-align: center;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        min-width: 200px;
    }
</style>
    <script src="~/js/slug.js"></script>
    <script>
        // Hàm chuyển đổi tab và lấy dữ liệu
        async function fetchAndShowTab(tabId, examTypeId, button) {
            // Cập nhật trạng thái nút tab
            const tabButtons = document.querySelectorAll('.tab-button');
            if (!tabButtons.length) {
                console.error('Không tìm thấy .tab-button');
                return;
            }
            tabButtons.forEach(btn => {
                btn.classList.remove('active-tab');
                btn.classList.add('inactive-tab');
            });
            button.classList.add('active-tab');
            button.classList.remove('inactive-tab');

            // Ẩn/hiện tab content
            const tabContents = document.querySelectorAll('.tab-content');
            if (!tabContents.length) {
                console.error('Không tìm thấy .tab-content');
                return;
            }
            tabContents.forEach(content => {
                content.style.display = 'none';
            });

            const activeTab = document.getElementById(tabId);
            if (!activeTab) {
                console.error(`Không tìm thấy tab với ID: ${tabId}`);
                return;
            }
            activeTab.style.display = 'block';
            activeTab.innerHTML = '<div class="timeline-item">Đang tải...</div>';

            try {
                const response = await fetch(`/Mentee/Toeic/TestOnline/${examTypeId}`);
                console.log('Response status:', response.status);
                console.log('Response ok:', response.ok);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                const data = await response.json();
               

                if (!Array.isArray(data)) {
                    console.warn('Dữ liệu không phải là mảng:', data);
                    activeTab.innerHTML = '<div class="timeline-item">Không có dữ liệu để hiển thị.</div>';
                    return;
                }

                activeTab.innerHTML = '';
                const title = document.createElement('div');
                title.className = 'timeline-item';
                title.textContent = tabId === 'listening-reading' ? 'TOEIC LISTENING & READING - FULL TEST' : 'TOEIC SPEAKING & WRITING';
                activeTab.appendChild(title);

                data.forEach((category, index) => {
                    if (!category.title || !Array.isArray(category.tests)) {
                        console.warn('Category không hợp lệ:', category);
                        return;
                    }

                    const timelineItem = document.createElement('div');
                    timelineItem.className = 'timeline-item';
                    timelineItem.dataset.number = index + 1;

                    const header = document.createElement('div');
                    header.className = 'timeline-header';
                    header.innerHTML = `
                        <div></div>
                        ${category.title}
                        <div class="arrow">▲</div>
                    `;
                    header.addEventListener('click', () => toggleTestList(timelineItem));

                    const content = document.createElement('div');
                    content.className = 'timeline-content';
                    content.style.display = 'none';
                    category.tests.forEach(test => {
                        if (!test.name || test.completedCount == null) {
                            console.warn('Test không hợp lệ:', test);
                            return;
                        }
                        const testItem = document.createElement('div');
                        testItem.className = 'test-item';
                        testItem.innerHTML = `
                                 <a style="text-decoration: none;" href="/Mentee/Toeic/TestOnline/TestInput/${examTypeId}/${test.slug}">
                                <strong>${test.name}</strong>
                                <div class="count">${test.completedCount.toLocaleString()} lượt hoàn thành</div>
                            </a>
                        `;
                        content.appendChild(testItem);
                    });

                    timelineItem.appendChild(header);
                    timelineItem.appendChild(content);
                    activeTab.appendChild(timelineItem);
                });

                if (!data.length) {
                    activeTab.innerHTML = '<div class="timeline-item">Không có dữ liệu để hiển thị.</div>';
                }
            } catch (error) {
                console.error('Error details:', error.message, error.stack);
                activeTab.innerHTML = '<div class="timeline-item">Đã xảy ra lỗi khi tải dữ liệu: ' + error.message + '</div>';
            }
        }

        function toggleTestList(timelineItem) {
            const content = timelineItem.querySelector('.timeline-content');
            const arrow = timelineItem.querySelector('.arrow');
            if (!content || !arrow) {
                console.error('Không tìm thấy .timeline-content hoặc .arrow trong timelineItem');
                return;
            }
            if (content.style.display === 'none') {
                content.style.display = 'block';
                arrow.textContent = '▼';
            } else {
                content.style.display = 'none';
                arrow.textContent = '▲';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const defaultButton = document.querySelector('.tab-button.active-tab');
            if (!defaultButton) {
                console.error('Không tìm thấy .tab-button.active-tab mặc định');
                return;
            }
            fetchAndShowTab('listening-reading', 3, defaultButton); // Sửa examTypeId=1 thành 3
        });
      
    </script>


}