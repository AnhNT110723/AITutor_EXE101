@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // hoặc relative path phù hợp
}

@model ProfileDto


        <!-- Page Content  -->
        <div id="content" class="p-4 p-md-5">
            <div class="sticky-wrapper">
                <nav class="navbar navbar-expand-lg navbar-light bg-light">
                    <div class="container-fluid">

                        <button type="button" id="sidebarCollapse" class="btn btn-sidebar-custom ">
                            <i class="fa fa-bars"></i>
                            <span class="sr-only">Toggle Menu</span>
                        </button>
                        <!-- Nút Back -->
                        <!-- <button class="btn btn-outline-secondary ml-2" onclick="history.back()">
                            <i class="fa fa-arrow-left"></i> Back
                        </button> -->
                        <button class="btn btn-dark d-inline-block d-lg-none ml-auto" type="button"
                                data-bs-target="#navbarSupportedContent"
                                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <i class="fa fa-bars"></i>
                        </button>

                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="nav navbar-nav ml-auto">
                                @*  <li class="nav-item active">
                                <a class="nav-link" href="home.html">Home</a>
                                </li>
                                <li class="nav-item">
                                <a class="nav-link" href="#">About</a>
                                </li>
                                <li class="nav-item">
                                <a class="nav-link" href="#">Portfolio</a>
                                </li> *@
                                @if (User.Identity.IsAuthenticated)
                                {
                                    // Đọc thông tin từ cookie
                                    var fullName = User.Identity.Name;
                                    var avatarUrl = User.FindFirst("Avatar")?.Value;
                                    <li class="nav-item dropdown">

                                        <a class="nav-link dropdown-toggle nav-link-avatar" href="#" id="avatarDropdown" role="button"
                                           data-bs-toggle="dropdown" aria-expanded="false">
                                            <div class="nav-img">
                                                <img src="@avatarUrl" alt="Avatar" class="img-fluid" style="border-radius: 50%;">
                                            </div>
                                        </a>
                                        <div class=" menu-items dropdown-menu dropdown-menu-end" aria-labelledby="avatarDropdown">
                                            <div class="menu-title">
                                                <h6 class="dropdown-header">Hello, <span>@fullName</span></h6>
                                            </div>
                                            <div class="dropdown-divider"></div>
                                            <a class="dropdown-item" asp-controller="Profile" asp-action="index">
                                                <i class="bi bi-person-circle"></i> View Profile
                                            </a>
                                            <div class="dropdown-divider"></div>
                                            <a id="logout-link" class="dropdown-item text-danger" href="#">
                                                <i class="bi bi-box-arrow-right"></i> <span id="logoutOption">Logout</span>
                                            </a>

                                            <form id="logoutForm" asp-controller="Account" asp-action="Logout" method="post" style="display: none;"></form>

                                        </div>
                                    </li>
                                }
                                else
                                {
                                    <a class="btn-login-custom btn " asp-controller="Account" asp-action="Login">Đăng nhập</a>
                                }
                            </ul>
                        </div>
                    </div>
                </nav>


                <div class="head-info">
                    <div class="">
                        <h4 id="title">Thông tin tài khoản</h4>
                    </div>
                    <div>
                        <!-- Tạo dropdown tùy chỉnh -->
                        <div class="dropdown position-relative" style="width: 200px;">
                            <button class="btn btn-light dropdown-toggle" type="button" style="width: 100%;"
                                    id="languageDropdown" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-expanded="false">
                                <img src="~/Images/Co-Vietnam.png" alt="Flag" class="flag-icon" /> Tiếng Việt
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="languageDropdown">
                                <li>
                                    <a class="dropdown-item" href="#" data-lang="vi">
                                        <img src="~/Images/Co-Vietnam.png" alt="Vietnam Flag" class="flag-icon" /> Tiếng Việt
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item" href="#" data-lang="en">
                                        <img src="~/Images/co-england.png" alt="England Flag" class="flag-icon" /> English
                                    </a>
                                </li>
                            </ul>
                        </div>



                    </div>
                </div>

            </div>
            <div class="scrollContent">
                <form asp-controller="Profile" asp-action="SaveChange" asp-area="Mentee" method="post" enctype="multipart/form-data">
                    <h5 id="accountRe">Tài khoản đăng ký</h5>
                    <div class="content-source">
                        <div class="container-fluid" style="height: auto;">
                            <div class="body-container">
                                <input type="hidden" asp-for="UserId" />
                                <input type="hidden" asp-for="AvatarStr" id="hiddenAvatarStr" /> <!-- Thêm input ẩn -->
                                <input type="file" asp-for="Avatar" id="hiddenAvatar" style="display: none;" accept="image/*">
                                <div class="row">
                                    <!-- Avatar -->
                                    <div class="col-lg-2 col-12">
                                        <div class="avatar-change position-relative avatar-border">
                                            <img src="@Url.Content(Model.AvatarStr)" id="avatarDisplay" alt="">
                                            <!-- Biểu tượng máy ảnh -->
                                            <button class="camera-icon" id="avatarEditBtn" type="button">
                                                <i class="fa fa-camera"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <!-- Thông tin tài khoản -->

                                    <div class="col-lg-10 col-12">
                                        <div class="row mb-3">
                                            <div class="col-md-6">
                                                <p id="inputName">Họ và tên</p>
                                                <input type="text" asp-for="FullName" class="form-control" id="fullName"
                                                       placeholder="Nhập họ và tên">
                                                <span asp-validation-for="FullName" class="text-danger"></span>
                                            </div>
                                            <div class="col-md-6">
                                                <p id="inputDate">Năm sinh</p>
                                                <input type="date" asp-for="Dob" class="form-control" id="birthYear" oninput="validateDate()">
                                                <span asp-validation-for="Dob" class="text-danger"></span>
                                                <div id="dateError" class="err" style="color: red"></div>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <div class="col-md-6">
                                                <p id="inputPhone">Số điện thoại</p>
                                                <div class="input-group custom-input-group">
                                                    <div style="width: 100%;">
                                                        <input type="tel" class="form-control" placeholder="Nhập số điện thoại" asp-for="Phone" id="phoneNumber"
                                                               oninput="validatePhone1()">
                                                        <span asp-validation-for="Phone" class="text-danger"></span>
                                                        <div id="phoneError" class="err" style="color: red"></div>

                                                        @if (TempData["PhoneExist"] != null)
                                                        {
                                                            <div class="err" id="PhoneExist" style="color: red">Số điện thoại này đã tồn tại, vui lòng nhập số điện thoại khác</div>
                                                        }
                                                        @if (TempData["PhoneErr"] != null)
                                                        {
                                                            <div class="err" id="PhoneErr" style="color: red">Lỗi định dạng số điện thoại</div>
                                                        }
                                                    </div>
                                                    <div>
                                                        <input type="hidden" asp-for="CountryCode" id="countryCode" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <p id="inputEmail">Email</p>
                                                <input type="email" asp-for="Email" class="form-control" id="email"
                                                       placeholder="Nhập email" disabled>
                                                <div id="emailError" class="err" style="color: red"></div>

                                                @* <span asp-validation-for="Email" class="text-danger"></span> *@
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <div class="col-md-6">
                                                <p id="inputDistrict">Tỉnh thành sinh sống</p>
                                                <select id="provinceSelect" class="form-select" asp-for="Province">
                                                    <option value="0">-- Chọn tỉnh/thành phố --</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    @if (Model.Provider == "Local")
                    {
                        <h5 class="text-change-password" id="changePassword">Thay đổi mật khẩu</h5>
                        <div class="propose-course" style="margin-top: 10px !important;">
                            <div class="container-fluid">
                                <div class="body-container">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <p id="inputOldpass">Nhập mật khẩu cũ</p>
                                            <input type="password" asp-for="OldPassword" id="OldPassword" class="form-control" oninput="validateOldPassword()"
                                                   placeholder="Nhập mật khẩu cũ">
                                            @if (TempData["OldPassErr"] != null)
                                            {
                                                <div class="err" id="OldPassErrBE" style="color: red">@TempData["OldPassErr"]</div>

                                            }
                                            <span asp-validation-for="OldPassword" class="text-danger"></span>
                                            <div id="OldPasswordError" class="err" style="color: red"></div>

                                        </div>
                                        <div class="col-md-6">
                                            <p id="inputPassword">Mật khẩu mới</p>
                                            <input type="password" asp-for="Password" class="form-control" id="password"
                                                   placeholder="Nhập mật khẩu" oninput="validatePassword()">
                                            <span asp-validation-for="Password" class="text-danger"></span>
                                            <div id="passwordError" class="err" style="color: red"></div>

                                        </div>
                                        <div class="col-md-6">
                                            <p id="inputRepass" style="margin-top: 20px !important  ;">
                                                Nhập lại mật khẩu mới
                                            </p>
                                            <input type="password" asp-for="RePassword" class="form-control"
                                                   id="re_pass" placeholder="Nhập lại mật khẩu" oninput="validateConfirmPassword()">
                                            <span asp-validation-for="RePassword" class="text-danger"></span>
                                            <div id="confirmPasswordError" class="err" style="color: red"></div>

                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    }



                    <div class="div-button-save-change">
                        <button id="btnSaveChange" type="submit">Lưu thay đổi</button>
                    </div>


                </form>
            </div>
        </div>




    <!-- Popup chọn avatar -->
    <div class="modal" id="avatarModal" tabindex="-1" role="dialog" aria-labelledby="avatarModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="avatarModalLabel">Chọn ảnh đại diện</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="img-normal d-flex gap-2">
                        <!-- Các ảnh mặc định -->
                        <div class="default-avatar">
                            <img src="~/Images/avatar.jpg" alt="Ảnh 1" class="avatar-option" data-url="~/Images/avatar.jpg">
                        </div>
                        <div class="default-avatar">
                            <img src="~/Images/user_icon.webp" alt="Ảnh 2" class="avatar-option" data-url="~/Images/user_icon.webp">
                        </div>
                        <div class="default-avatar">
                            <img src="~/Images/CHAT.png" alt="Ảnh 3" class="avatar-option" data-url="~/Images/CHAT.png">
                        </div>
                        <div class="default-avatar">
                            <img src="~/Images/concoc.png" alt="Ảnh 4" class="avatar-option" data-url="~/Images/concoc.png">
                        </div>
                    </div>
                    <hr>
                    <!-- Ô input file -->
                    <label for="uploadAvatar" class="custom-file-input-label">
                        <input type="file" id="uploadAvatar" accept="image/*" class="form-control custom-file-input" onchange="previewAvatar(this)">
                        <span class="text-danger" id="avatarError"></span>
                        <div id="filePreview" class="file-preview">
                            <span id="titleModalImg">Tải ảnh lên từ thiết bị</span>
                            <img id="avatarPreview" style="display: none; max-width: 100%; margin-top: 10px;" alt="Avatar Preview">
                        </div>
                    </label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="closeBtn">Đóng</button>
                    <button type="button" class="btn btn-primary" id="saveAvatarBtn">Lưu</button>
                </div>
            </div>
        </div>
    </div>
@section Scripts {
    <link href="~/css/mentee/profile.css" rel="stylesheet" />

    @* <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script> *@
    <script src="~/js/mentee/profile.js"></script>
    <script src="~/js/mentee/profile_validation.js"></script>
    @if (TempData["success"] != null)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    title: 'Save change successfully!',
                    icon: 'success',
                    confirmButtonText: 'OK',
                    customClass: {
                        confirmButton: 'custom-confirm-btn'
                    }
                });
            });
        </script>
    }

    @if (TempData["Error"] != null)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: '@TempData["Error"]',
                    confirmButtonText: 'OK',
                });
            });
        </script>
    }

    <script>


        // Sidebar toggle functionality
        $(document).ready(function () {

            // Handle mobile menu toggle
            $('.btn-dark.d-inline-block.d-lg-none.ml-auto').on('click', function () {
                var navbar = $('#navbarSupportedContent');
                if (navbar.hasClass('show')) {
                    navbar.removeClass('show');
                } else {
                    navbar.addClass('show');
                }
            });

        });

        // Set lại quốc gia theo ViewBag
        const regionCode = "@ViewBag.RegionCode";
        if (regionCode) {
            iti.setCountry(regionCode);
        }

        // Reset validation state khi load trang
        phoneInput.classList.remove("is-valid", "is-invalid");

        document.addEventListener('DOMContentLoaded', function () {
            const select = document.getElementById('provinceSelect');
            const modelProvinceValue = parseInt("@Model.Province", 10);
            console.log("Contry code: ", modelProvinceValue);
            // Function to apply initial styles
            function applyInitialStyles() {
                const selectedOption = select.options[select.selectedIndex];
                if (selectedOption && selectedOption.value) {
                    selectedOption.style.backgroundColor = '#ff8c00';
                    selectedOption.style.color = 'white';
                }
            }

            // Fetch provinces and set initial value
            fetch("https:provinces.open-api.vn/api/p/")
                .then(res => res.json())
                .then(data => {
                    data.forEach(province => {
                        const option = document.createElement('option');
                        option.value = province.code;
                        option.textContent = province.name;
                        // Set selected if matches model value
                        if (province.code === modelProvinceValue) {
                            option.selected = true;
                        }
                        select.appendChild(option);
                    });
                    // Apply styles after options are added and selection is set
                    applyInitialStyles();
                });

            // Add animation when opening the dropdown
            select.addEventListener('mousedown', function () {
                if (this.size === 1) {
                    this.size = 10;
                    this.style.position = 'absolute';
                    this.style.zIndex = 1;
                }
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', function (e) {
                if (!select.contains(e.target)) {
                    select.size = 1;
                    select.style.position = 'relative';
                }
            });

            // Handle option selection
            select.addEventListener('change', function () {
                this.size = 1;
                this.style.position = 'relative';

                // Reset all options
                Array.from(this.options).forEach(opt => {
                    opt.style.backgroundColor = '';
                    opt.style.color = '';
                });

                // Style selected option
                const selectedOption = this.options[this.selectedIndex];
                if (selectedOption) {
                    selectedOption.style.backgroundColor = '#ff8c00';
                    selectedOption.style.color = 'white';
                }
            });

            // Prevent immediate closing when clicking on select
            select.addEventListener('click', function (e) {
                if (this.size === 1) {
                    e.preventDefault();
                }
            });

            // Style options on hover
            select.addEventListener('mouseover', function (e) {
                if (e.target.tagName === 'OPTION' && !e.target.selected) {
                    e.target.style.backgroundColor = '#ff8c00';
                    e.target.style.color = 'white';
                }
            });

            // Reset hover styles
            select.addEventListener('mouseout', function (e) {
                if (e.target.tagName === 'OPTION' && !e.target.selected) {
                    e.target.style.backgroundColor = '';
                    e.target.style.color = '';
                }
            });
        });


        //Xử lý ảnh trong profile
        // Xử lý ảnh trong profile
        document.addEventListener('DOMContentLoaded', () => {
            const avatarEditBtn = document.getElementById('avatarEditBtn');
            const avatarModal = document.getElementById('avatarModal');
            const uploadAvatar = document.getElementById('uploadAvatar');
            const hiddenAvatar = document.getElementById('hiddenAvatar');
            const hiddenAvatarStr = document.getElementById('hiddenAvatarStr');
            const filePreview = document.getElementById('filePreview');
            const titleModalImg = document.getElementById('titleModalImg');
            const avatarPreview = document.getElementById('avatarPreview');
            const saveAvatarBtn = document.getElementById('saveAvatarBtn');
            const closeBtn = document.getElementById('closeBtn');
            const avatarDisplay = document.getElementById('avatarDisplay');
            const defaultAvatars = document.querySelectorAll('.avatar-option');
            let selectedAvatar = null;
            let isSaved = false; // Biến để kiểm tra trạng thái lưu

            // Hàm xóa dấu ~ khỏi đường dẫn
            const normalizePath = (path) => {
                if (path && path.startsWith('~')) {
                    return path.substring(1);
                }
                return path;
            };

            // Debug: Kiểm tra các phần tử
            console.log('avatarEditBtn:', avatarEditBtn);
            console.log('avatarModal:', avatarModal);
            console.log('uploadAvatar:', uploadAvatar);
            console.log('hiddenAvatar:', hiddenAvatar);
            console.log('hiddenAvatarStr:', hiddenAvatarStr);
            console.log('saveAvatarBtn:', saveAvatarBtn);

            // Hiển thị modal
            if (avatarEditBtn && avatarModal) {
                avatarEditBtn.addEventListener('click', () => {
                    console.log('Avatar edit button clicked');
                    isSaved = false; // Reset trạng thái khi mở modal
                    $(avatarModal).modal('show');
                });
            }

            // Xử lý chọn ảnh mặc định
            if (defaultAvatars && defaultAvatars.length > 0) {
                defaultAvatars.forEach((img) => {
                    img.addEventListener('click', () => {
                        console.log('Default avatar selected:', img.dataset.url);
                        // Đặt viền cho ảnh được chọn
                        defaultAvatars.forEach((item) => item.parentElement.style.border = '1px solid #ddd');
                        img.parentElement.style.border = '2px solid #007bff';

                        // Cập nhật preview
                        avatarPreview.src = img.src;
                        avatarPreview.style.display = 'block';
                        titleModalImg.style.display = 'none';

                        // Lưu đường dẫn (xóa ~) và xóa file
                        selectedAvatar = normalizePath(img.dataset.url);
                        console.log('Normalized path:', selectedAvatar);
                        uploadAvatar.value = '';
                        hiddenAvatar.value = '';
                        hiddenAvatarStr.value = selectedAvatar;
                        console.log('hiddenAvatarStr set to:', hiddenAvatarStr.value);
                    });
                });
            }

            // Xử lý chọn ảnh từ máy
            if (uploadAvatar && filePreview && avatarPreview) {
                uploadAvatar.addEventListener('change', (event) => {
                    const file = event.target.files[0];
                    console.log('File selected:', file ? file.name : 'No file');
                    if (file) {
                        // Kiểm tra định dạng và kích thước
                        const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                        if (!validTypes.includes(file.type)) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Vui lòng chọn file ảnh (JPEG, PNG, GIF)!',
                            });
                            uploadAvatar.value = '';
                            return;
                        }
                        if (file.size > 5 * 1024 * 1024) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Kích thước ảnh không được vượt quá 5MB!',
                            });
                            uploadAvatar.value = '';
                            return;
                        }

                        const reader = new FileReader();
                        reader.onload = function (e) {
                            avatarPreview.src = e.target.result;
                            avatarPreview.style.display = 'block';
                            titleModalImg.style.display = 'none';
                            selectedAvatar = e.target.result;

                            // Chuyển file sang hiddenAvatar
                            const dataTransfer = new DataTransfer();
                            dataTransfer.items.add(file);
                            hiddenAvatar.files = dataTransfer.files;
                            hiddenAvatarStr.value = ''; // Xóa AvatarStr
                            console.log('File copied to hiddenAvatar:', hiddenAvatar.files[0]?.name);
                            console.log('hiddenAvatarStr cleared:', hiddenAvatarStr.value);
                        };
                        reader.readAsDataURL(file);

                        // Xóa viền ảnh mặc định
                        defaultAvatars.forEach((item) => item.parentElement.style.border = '1px solid #ddd');
                    }
                });
            }

            // Lưu ảnh
            if (saveAvatarBtn) {
                saveAvatarBtn.addEventListener('click', () => {
                    console.log('Save avatar button clicked, selectedAvatar:', selectedAvatar);
                    if (selectedAvatar) {
                        // Cập nhật ảnh hiển thị
                        if (avatarDisplay) {
                            avatarDisplay.src = normalizePath(selectedAvatar);
                            console.log('avatarDisplay updated to:', avatarDisplay.src);
                        }
                        // Đánh dấu đã lưu
                        isSaved = true;
                        // Đóng modal
                        const modal = bootstrap.Modal.getInstance(avatarModal);
                        if (modal) {
                            modal.hide();
                        }
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Chưa chọn ảnh',
                            text: 'Vui lòng chọn một ảnh mặc định hoặc tải lên ảnh mới!',
                        });
                    }
                });
            }

            // Reset khi đóng modal
            if (avatarModal) {
                avatarModal.addEventListener('hidden.bs.modal', () => {
                    console.log('Modal closed, isSaved:', isSaved);
                    if (!isSaved) {
                        // Chỉ reset nếu chưa nhấn "Lưu"
                        console.log('Resetting...');
                        avatarPreview.src = '';
                        avatarPreview.style.display = 'none';
                        titleModalImg.style.display = 'block';
                        uploadAvatar.value = '';
                        hiddenAvatar.value = '';
                        hiddenAvatarStr.value = '';
                        selectedAvatar = null;
                        defaultAvatars.forEach((item) => item.parentElement.style.border = '1px solid #ddd');
                        console.log('Reset complete: hiddenAvatar:', hiddenAvatar.files.length, 'hiddenAvatarStr:', hiddenAvatarStr.value);
                    }
                });
            }

            // Debug form submit
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', (e) => {
                    console.log('Form submitting...');
                    console.log('hiddenAvatar files:', hiddenAvatar.files.length, hiddenAvatar.files[0]?.name);
                    console.log('hiddenAvatarStr:', hiddenAvatarStr.value);
                });
            }
        });


    </script>
}